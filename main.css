/****************************** body part *******************************/
body {
    font-family: 'Poppins', 'sans-serif';
    font-weight: 300;
}
/* body css part: font-family를 통해 글꼴을 설정하였고, 기본 Poppins를 사용하지만
불러오지 못할 경우 sans-serif 글꼴을 이용한다는 의미, font-weight는 글꼴 두께를 의미 */

/***************************** header part ******************************/
header {
    position: relative;
}

/* position은 기준이 있어야 한다. 보통 상위(조상) Element가 기준이 되고
상위(조상) position: relative 상대적 개념이 적용된다.
이를 기준으로 그 하위 Element는 absolute 값을 적용하여 상위 element 기준으로 배치가 된다
ex) top: 50% 위 지점에서 50프로 되는 위치
추가로, block 영역으 왼쪽 상단이 기준점이 된다. */

header .forms input.form-control {
    color: white;
    background-color: rgba(255,255,255,.15);
    border-color: rgba(255,255,255,.3);
}
/* :: 가상 요소 선택자, : 가상 클래스 선택자 */
header .forms input.form-control::placeholder {
    color: rgba(255,255,255,.6);
}

header [data-bs-toggle="offcanvas"] {
    display: none;
}

header .offcanvas .list-group-item {
    padding: 16px;
}

header .offcanvas .list-group-item a {
    color: black;
    text-decoration: none;
}
/* text-decoration > default underline이 적용 */

header .offcanvas .list-group-item a:hover {
    text-decoration: underline;
}

/* 기본적으로 breakpoint를 가지고 간단히 반응형 구조를 구현할 수 있으나
@media로 반응형 구조를 구현할 수 있음 */
@media (max-width: 992px) {
    header .logo {
        flex-grow: 1;
    }

    header .nav,
    header .forms input.form-control,
    header .forms .btn-link{
        display: none;
    }

    header [data-bs-toggle="offcanvas"] {
        display: block;
    }
    /* display: block > visible on all */
}

/************************** secion hero part ***************************/
section.hero {
    background-color: #040d22;
    position: relative;
    overflow: hidden;
}

section.hero .container {
    padding-top: 160px;
    padding-bottom: 160px;
    position: relative;
}

section.hero .headline  h1 { 
    font-size: 68px;
    font-weight: 700;
    letter-spacing: -2px;   /* 글자 간격 */
}

section.hero .headline p {
    font-size: 26px;
}

section.hero img.globe {
    width: 900px;
    position: absolute;
    top: -5%;
    left: 46%;
}

section.hero img.glow {
    width: 200px;
    height: 200px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
/* transform 속성에서 translate 값을 이용하여
기준점을 변경할 수 있다. default는 왼쪽 상단 
translateX / translateY or translate(X, Y)*/

section.hero img.curve {
    position: absolute;
    bottom: -1px;
    left: 0;
}

/************************** secion youtube part ***************************/

section.youtube {
    position: relative;
}

section.youtube .container {
    padding-top: 90px;
    padding-bottom: 70px;
    position: relative;
}

section.youtube img.astronaut {
    width: 480px;
    position: absolute;
    top: -420px;
    right: 0px;
}

@media (max-width: 768px) {
    section.youtube img.astronaut {
        display: none;
    }
}

section.youtube .ratio {
    border-radius: 10px;
    overflow: hidden;
    background-color: black;
}

/************************** secion features part ***************************/

section.features {

}

section.features .container {
    padding-top: 30px;
    padding-bottom: 30px;
}

section.features .card {
    color: #627597;
    border: none;
}

section.features .card img {
    padding: 30px 60px;
}

@media (max-width: 576px) {
    section.features .card img {
        padding: 20px 30px;
    }
}

/************************** secion map part ***************************/
section.map {
    
}

section.map .container {
    padding-top: 100px;
    padding-bottom: 100px;
    color: #627597;
}

section.map h1 {
    font-weight: 700;
    font-size: 44px;
}

section.map p {
    font-size: 26px;
}
/* z-index: 모니터 화면 상 원근감을 표현 */
#map {
    height: 500px;
    border: 1px solid rgba(0,0,0,.2);
    border-radius: 10px;
    z-index: 1;
    overflow: hidden;
}

/************************** secion footer part ***************************/
footer {
    background-color: #040d22;
    position: relative;
    margin-top: 20%;
}
/* position: block 요소 내에서 위치를 조정할때 사용하는 속성 */
/* 상위 요소에 postion: relative 속성이 되어 있어야 함 */
/* transform 변환 속성 scale 함수를 통해서 반전을 줄 수 있음 */
footer .curve {
    transform: scale(1, -1);
    position: absolute;
    top: -1px;
    left: 0px;
}

footer .container {

}

/* margin: 외부 여백, padding: 내부 여백 */
/* position 조절 효과를 얻을 수 있다 */
footer img.illustration {
    width: 100%;
    transform: scale(-1, 1);
    margin-top: -33%;
    margin-bottom: 50px;
}

/* opacity: 불투명함 속성 0 ~ 1 0으로 갈수록 투명 */
footer .logo{
    opacity: .4;
}

footer h5 {
    font-size: 20px;
    font-weight: 700;
    color: rgba(255,255,255,.4);
    margin-bottom: 20px;
}

footer ul li {
    margin-bottom: 10px;
}

footer ul li a{
    text-decoration: none;
    color: rgba(255,255,255,.4);
    transition: .3s;    /* transition: 전환 효과 */
}
/* :hover 가상 클래스 선택자 */
/* ::before 가상 요소 선택자 */
footer ul li a:hover {
    color: white;
}

/* ul tag 기본적으로 margin-bottom: 1rem으로 설정
1rem html 요소의 기본 글자 크기를 말하며 16
기본적으로 설정되어 있기 때문에 margin: 0을 통해 없애준다 */
footer .site-links {
    background-color: rgba(255,255,255,.05);
    padding: 20px;
    margin: 0;
    margin-top: 60px;
    text-align: center;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
}
/* flex-wrap: flex 요소(display: flex)를 줄바꿈과 관련된 속성
기본 값은 nowrap이고, flex요소를 한번 감싸서 줄바꿈을 허용하겠다라는 의미
nowrap의 경우 뷰의 크기가 줄어들게 되면 블럭 내부 요소의 텍스트 줄바꿈이 처리가 된다*/

/* justify-content : flex-block 영역 내에서 main axis 기준으로 정렬할 때 사용 */
/* wrap:  */
footer .site-links li {
    color: rgba(255,255,255,.4);
    margin: 0px;
    margin-right: 20px;
}

footer .site-links li:last-child {
    margin-right: 0px;
}

@media (max-width: 992px) {
    footer {
        text-align: center;
    }

    footer .logo {
        margin-bottom: 50px;
    }
}